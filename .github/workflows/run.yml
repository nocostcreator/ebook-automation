name: generate-ebook
on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * *"  # daily at 13:00 UTC (9:00am ET)

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Generate ebook via HF Inference API
        env:
          HF_API_TOKEN: ${{ secrets.HF_API_TOKEN }}
        run: |
          python - <<'PY'
          import os, json, time, datetime, requests, sys
          TOPIC = "Mindfulness for Beginners"
          MODEL_ID = os.environ.get("HF_MODEL_ID","distilgpt2")
          API_URL = f"https://api-inference.huggingface.co/models/{MODEL_ID}"
          token = os.environ.get("HF_API_TOKEN")
          if not token:
              print("No HF_API_TOKEN set"); sys.exit(1)
          headers = {"Authorization": f"Bearer {token}", "Content-Type": "application/json"}
          prompt = (
              f"Write a concise, beginner-friendly short ebook about: {TOPIC}.\n"
              "Include a short intro, 4–6 brief chapters (1–2 paragraphs each),\n"
              "and an actionable checklist at the end.\n"
          )
          payload = {
              "inputs": prompt,
              "parameters": {"max_new_tokens": 400},
              "options": {"wait_for_model": True}
          }
          for attempt in range(1,6):
              print(f"→ Attempt {attempt} to {API_URL}")
              resp = requests.post(API_URL, headers=headers, data=json.dumps(payload), timeout=120)
              if resp.status_code == 200:
                  try:
                      data = resp.json()
                      if isinstance(data, list) and data and "generated_text" in data[0]:
                          text = data[0]["generated_text"]
                      else:
                          text = resp.text
                      ts = datetime.datetime.utcnow().strftime("%Y%m%d_%H%M%S")
                      fname = f"ebook_{ts}.txt"
                      with open(fname, "w", encoding="utf-8") as f:
                          f.write(text)
                      print("✅ Saved", fname)
                      break
                  except Exception as e:
                      print("Parse error:", e, "| body head:", resp.text[:200])
                      time.sleep(8)
              elif resp.status_code in (503, 504, 524, 408):
                  print("Model loading or timeout; retrying...")
                  time.sleep(10)
              elif resp.status_code in (401,403):
                  print("Auth error:", resp.text); sys.exit(1)
              else:
                  print(f"HTTP {resp.status_code}: {resp.text[:200]}")
                  time.sleep(8)
          else:
              sys.exit("Failed after retries.")
          PY

      - name: Upload artifact (ebook file)
        uses: actions/upload-artifact@v4
        with:
          name: generated-ebook
          path: ebook_*.txt
